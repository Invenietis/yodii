//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yodii.Host {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class R {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal R() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Yodii.Host.R", typeof(R).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled and Running list share {0} plugin(s)..
        /// </summary>
        internal static string DisabledAndRunningPluginsIntersect {
            get {
                return ResourceManager.GetString("DisabledAndRunningPluginsIntersect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled and Stopped list share {0} plugin(s)..
        /// </summary>
        internal static string DisabledAndStoppedPluginsIntersect {
            get {
                return ResourceManager.GetString("DisabledAndStoppedPluginsIntersect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External Service implementation must be provided..
        /// </summary>
        internal static string ExternalImplRequiredAsANonNullObject {
            get {
                return ResourceManager.GetString("ExternalImplRequiredAsANonNullObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Exception object in call to ExternalLogError..
        /// </summary>
        internal static string ExternalLogErrorMissException {
            get {
                return ResourceManager.GetString("ExternalLogErrorMissException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface must extend IDynamicService to be a Dynamic Service..
        /// </summary>
        internal static string InterfaceMustExtendIDynamicService {
            get {
                return ResourceManager.GetString("InterfaceMustExtendIDynamicService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PluginRunner.PluginConfigurator must be not null..
        /// </summary>
        internal static string PluginConfiguratorIsNull {
            get {
                return ResourceManager.GetString("PluginConfiguratorIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PluginRunner.PluginCreator must not be null..
        /// </summary>
        internal static string PluginCreatorIsNull {
            get {
                return ResourceManager.GetString("PluginCreatorIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PluginCreator returned a null plugin for &apos;{0}&apos;..
        /// </summary>
        internal static string PluginCreatorReturnedNull {
            get {
                return ResourceManager.GetString("PluginCreatorReturnedNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service &apos;{0}&apos; is already bound to an external implementation. Plugin &apos;{1}&apos; can not offer it..
        /// </summary>
        internal static string ServiceIsAlreadyExternal {
            get {
                return ResourceManager.GetString("ServiceIsAlreadyExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service &apos;{0}&apos; is a dynamic service that is implemented by plugins. It can not be associated to an external implementation..
        /// </summary>
        internal static string ServiceIsPluginBased {
            get {
                return ResourceManager.GetString("ServiceIsPluginBased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped and Running list share {0} plugin(s)..
        /// </summary>
        internal static string StoppedAndRunningPluginsIntersect {
            get {
                return ResourceManager.GetString("StoppedAndRunningPluginsIntersect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type must be an Interface..
        /// </summary>
        internal static string TypeMustBeAnInterface {
            get {
                return ResourceManager.GetString("TypeMustBeAnInterface", resourceCulture);
            }
        }
    }
}
