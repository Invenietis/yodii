<Metro:MetroWindow
    x:Class="Yodii.ObjectExplorer.Windows.ObjectExplorerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vms="clr-namespace:Yodii.ObjectExplorer.ViewModels"
    xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
    mc:Ignorable="d mocks"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mocks="clr-namespace:Yodii.ObjectExplorer.Mocks"
    xmlns:ckcore="clr-namespace:CK.Core;assembly=CK.Core"
    xmlns:Controls="clr-namespace:Yodii.ObjectExplorer.Controls"
    xmlns:Converters="clr-namespace:Yodii.ObjectExplorer.Converters"
    Title="Object explorer"
    WindowStartupLocation="CenterScreen"
    Height="480"
    Width="640">
    <Metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary
                    Source="../Resources/Converters.xaml"></ResourceDictionary>
                <ResourceDictionary>
                    <DataTemplate
                        DataType="vms:YodiiItemViewModelBase"
                        x:Key="YodiiItemViewModelBaseTreeViewDataTemplate">
                        <Controls:YodiiLiveItemControl
                            LiveItemViewModel="{Binding}" />
                    </DataTemplate>
                    <Controls:TreeViewItemCollection
                        x:Key="StandardItemCollection">
                        <TreeViewItem
                            Header="Services"
                            ItemsSource="{Binding Path=EngineViewModel.Services}"
                            IsExpanded="True"
                            ItemTemplate="{StaticResource ResourceKey=YodiiItemViewModelBaseTreeViewDataTemplate}">
                            <TreeViewItem.ItemContainerStyle>
                                <Style
                                    TargetType="TreeViewItem">
                                    <Setter
                                        Property="IsSelected"
                                        Value="{Binding Path=IsSelected}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                        </TreeViewItem>
                        <TreeViewItem
                            Header="Plugins"
                            ItemsSource="{Binding Path=EngineViewModel.Plugins}"
                            IsExpanded="True"
                            ItemTemplate="{StaticResource ResourceKey=YodiiItemViewModelBaseTreeViewDataTemplate}">
                            <TreeViewItem.ItemContainerStyle>
                                <Style
                                    TargetType="TreeViewItem">
                                    <Setter
                                        Property="IsSelected"
                                        Value="{Binding Path=IsSelected}" />
                                </Style>
                            </TreeViewItem.ItemContainerStyle>
                        </TreeViewItem>
                    </Controls:TreeViewItemCollection>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Metro:MetroWindow.Resources>
    <Metro:MetroWindow.RightWindowCommands>
        <Metro:WindowCommands>
            <Button
                Click="ConfigManagerButton_Click"
                Content="configuration manager" />
        </Metro:WindowCommands>
    </Metro:MetroWindow.RightWindowCommands>
    <DockPanel
        LastChildFill="True"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type mocks:MockObjectExplorerViewModel}}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    MinWidth="10"
                    Width="200" />
                <ColumnDefinition
                    MinWidth="10"
                    Width="Auto" />
                <ColumnDefinition
                    MinWidth="10"
                    Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid
                HorizontalAlignment="Stretch"
                Grid.Column="0">
                <GroupBox
                    Header="Yodii objects">
                    <TreeView
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ItemsSource="{StaticResource ResourceKey=StandardItemCollection}">
                    </TreeView>
                </GroupBox>
            </Grid>
            <GridSplitter
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                Width="5"
                ResizeDirection="Columns"
                Grid.Column="1" />
            <Grid
                Grid.Column="2">
                <!-- Main content / no selection -->
                <StackPanel
                    Orientation="Vertical"
                    Visibility="{Binding Path=EngineViewModel.SelectedItem, Converter={StaticResource ResourceKey=NullToVisibilityConverter}, ConverterParameter=true}">

                    <TextBlock
                        FontSize="18pt"
                        TextWrapping="Wrap"
                        FontWeight="Light">
                        Select a service or plugin to see its properties.
                    </TextBlock>
                </StackPanel>
                <!-- Main content / selected service or plugin -->
                <StackPanel
                    DataContext="{Binding Path=EngineViewModel.SelectedItem}"
                    Orientation="Vertical"
                    Visibility="{Binding Converter={StaticResource ResourceKey=NullToVisibilityConverter}}">
                    <StackPanel
                        Orientation="Horizontal">
                        <Controls:YodiiRunningStatusIcon
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Width="32"
                            Height="32"
                            RunningStatus="{Binding Path=LiveItem.RunningStatus}" />
                        <TextBlock
                            Text="{Binding Path=DisplayName, FallbackValue=(DisplayName), TargetNullValue=''}"
                            FontSize="18pt"
                            FontWeight="Light" />
                    </StackPanel>
                    <TextBlock
                        FontFamily="Consolas, Courier New"
                        FontWeight="Light"
                        Text="{Binding Path=FullName, FallbackValue=(FullName), Mode=OneWay}"
                        FontSize="8pt" />
                    <TextBlock
                        DataContext="{Binding AsPlugin, Mode=OneWay}"
                        Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}">
                        Yodii plugin.
                        <TextBlock
                            Visibility="{Binding Service, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}">
                            Implements
                            <Hyperlink Command="{Binding SelectItemCommand}" CommandParameter="{Binding Service}">
                                <Run
                                    Text="{Binding Service.DisplayName, Mode=OneWay}" />
                            </Hyperlink>
                        </TextBlock>
                    
                    </TextBlock>
                    <TextBlock
                        Margin="0,10"
                        Text="{Binding Path=Description, FallbackValue=(Desc), TargetNullValue=''}" />
                    <Button
                        Margin="10"
                        MinHeight="30">
                        <Button.Style>
                            <Style
                                TargetType="Button">
                                <Setter
                                    Property="Content">
                                    <Setter.Value>
                                        Toggle
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Path=LiveItem.RunningStatus}"
                                        Value="Disabled">
                                        <Setter
                                            Property="Content">
                                            <Setter.Value>
                                                Can't start (disabled)
                                            </Setter.Value>
                                        </Setter>
                                        <Setter
                                            Property="Command"
                                            Value="{Binding Path=StartItemCommand}" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding Path=LiveItem.RunningStatus}"
                                        Value="Stopped">
                                        <Setter
                                            Property="Content">
                                            <Setter.Value>
                                                Start
                                            </Setter.Value>
                                        </Setter>
                                        <Setter
                                            Property="Command"
                                            Value="{Binding Path=StartItemCommand}" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding Path=LiveItem.RunningStatus}"
                                        Value="Running">
                                        <Setter
                                            Property="Content">
                                            <Setter.Value>
                                                Stop
                                            </Setter.Value>
                                        </Setter>
                                        <Setter
                                            Property="Command"
                                            Value="{Binding Path=StopItemCommand}" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding Path=LiveItem.RunningStatus}"
                                        Value="RunningLocked">
                                        <Setter
                                            Property="Content">
                                            <Setter.Value>
                                                Can't stop (locked)
                                            </Setter.Value>
                                        </Setter>
                                        <Setter
                                            Property="Command"
                                            Value="{Binding Path=StopItemCommand}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </DockPanel>
</Metro:MetroWindow>
