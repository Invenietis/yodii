<Fluent:RibbonWindow
    x:Class="Yodii.Lab.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:GraphSharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
    xmlns:WpfExtensions="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
    xmlns:local="clr-namespace:Yodii.Lab"
    xmlns:mocks="clr-namespace:Yodii.Lab.Mocks"
    xmlns:ym="clr-namespace:Yodii.Model;assembly=Yodii.Model"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    x:Name="MainWindowRoot"
    Title="Yodii Lab"
    Height="600"
    Width="800">
    <Fluent:RibbonWindow.Resources>
        <BooleanToVisibilityConverter
            x:Key="boolToVisibilityConverter" />

        <ObjectDataProvider
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}"
            x:Key="RunningRequirements">
            <ObjectDataProvider.MethodParameters>
                <x:Type
                    TypeName="ym:RunningRequirement" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate
            x:Key="serviceVertexPropertiesTemplate"
            DataType="local:YodiiGraphVertex">
            <local:ServicePropertyPanel
                LiveServiceInfo="{Binding Path=LiveServiceInfo, Mode=OneWay}"
                ServiceInfoManager="{Binding Path=DataContext.ServiceInfoManager, ElementName=MainWindowRoot, Mode=OneWay}" />
        </DataTemplate>

        <DataTemplate
            x:Key="pluginVertexPropertiesTemplate"
            DataType="local:YodiiGraphVertex">
            <local:PluginPropertyPanel
                LivePluginInfo="{Binding Path=LivePluginInfo, Mode=OneWay}"
                ServiceInfos="{Binding Path=DataContext.ServiceInfos, ElementName=MainWindowRoot, Mode=OneWay}" />
        </DataTemplate>

        <local:VertexPropertiesTemplateSelector
            PluginPropertiesTemplate="{StaticResource pluginVertexPropertiesTemplate}"
            ServicePropertiesTemplate="{StaticResource serviceVertexPropertiesTemplate}"
            x:Key="vertexPropertiesTemplateSelector" />
    </Fluent:RibbonWindow.Resources>
    <DockPanel>
        <Fluent:Ribbon
            DockPanel.Dock="Top">
            <Fluent:Ribbon.QuickAccessItems>
                <Fluent:QuickAccessMenuItem
                    Header="Save" />
            </Fluent:Ribbon.QuickAccessItems>
            <!--Tabs-->
            <Fluent:RibbonTabItem
                Header="Home">
                <Fluent:RibbonGroupBox
                    Header="File">
                    <Fluent:Button
                        Header="Open"
                        Click="OpenFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource FolderOpenIcon}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        Header="Save as"
                        Click="SaveAsFile_Click">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource DiskIcon}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        Header="Add service"
                        Click="NewServiceButton_Click">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource ServiceIconBlack}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        Header="Add plugin"
                        Click="NewPluginButton_Click">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource PluginIconBlack}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        Header="Delete selected"
                        Command="{Binding Path=RemoveSelectedVertex}">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource DeleteIcon}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        Header="Configuration editor"
                        Click="ConfEditorButton_Click">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource LayerIcon}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:SplitButton
                        Header="Reorder graph"
                        ItemsSource="{Binding Path=GraphLayoutAlgorithms}"
                        MenuItem.Click="NewGraphLayoutButton_Click"
                        Click="ReorderGraphButton_Click">
                        <Fluent:SplitButton.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource RefreshIcon}" />
                        </Fluent:SplitButton.LargeIcon>
                        <!--<Fluent:DropDownButton.ItemTemplate>
                            <DataTemplate DataType="{x:Type sys:String}">
                                <Fluent:MenuItem Header="{Binding}"/>
                            </DataTemplate>
                        </Fluent:DropDownButton.ItemTemplate>-->
                    </Fluent:SplitButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <!-- Central panel -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="4*" />
                <RowDefinition
                    Height="3pt" />
                <RowDefinition
                    Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="3*" />
                <ColumnDefinition
                    Width="3pt" />
                <ColumnDefinition
                    Width="1*" />
            </Grid.ColumnDefinitions>

            <!-- Graph viewer -->
            <xctk:Zoombox
                Grid.Column="0"
                Grid.Row="0"
                MouseDown="graphLayout_MouseDown">
                <Border
                    Padding="30pt">
                    <local:YodiiGraphLayout
                        x:Name="graphLayout"
                        Margin="0pt"
                        Graph="{Binding Path=Graph}"
                        LayoutAlgorithmType="EfficientSugiyama"
                        OverlapRemovalAlgorithmType="FSA"
                        GraphSharp:GraphElementBehaviour.HighlightTrigger="True"
                        HighlightAlgorithmType="Simple"
                        MaxHeight="2000"
                        MaxWidth="2000">

                        <local:YodiiGraphLayout.Resources>
                            <!-- Vertex view structure/data -->
                            <DataTemplate
                                x:Key="YodiiVertexTemplate"
                                DataType="{x:Type local:YodiiGraphVertex}">

                                <local:YodiiVertexControl
                                    Vertex="{Binding Mode=OneWay}" ConfigurationManager="{Binding ElementName=MainWindowRoot, Path=DataContext.ConfigurationManager}" />

                                <DataTemplate.Triggers>
                                    <!-- Bold title on highlight -->
                                    <!--<DataTrigger Binding="{Binding Path=IsHighlighted, Mode=OneWay}" Value="true">
                                    <Setter TargetName="VertexTitle" Property="FontWeight" Value="Bold" />
                                </DataTrigger>-->
                                    
                                    <!-- IsStarted text -->
                                    <!--<DataTrigger Binding="{Binding Path=IsStarted, Mode=OneWay}" Value="true">
                                    <Setter TargetName="IsStartedText" Property="Text" Value="Started" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsStarted, Mode=OneWay}" Value="false">
                                    <Setter TargetName="IsStartedText" Property="Text" Value="Stopped" />
                                </DataTrigger>-->
                                </DataTemplate.Triggers>

                            </DataTemplate>

                            <!-- Vertex styling -->

                            <!-- Vertex style -->
                            <Style
                                TargetType="{x:Type GraphSharp:VertexControl}">
                                <Style.Resources>
                                    <!-- Mouse tooltip -->
                                    <ToolTip
                                        x:Key="VertexToolTipContent">
                                        <StackPanel>
                                            <TextBlock
                                                Text="{Binding Title}" />
                                        </StackPanel>
                                    </ToolTip>
                                </Style.Resources>
                                <Setter
                                    Property="ToolTip"
                                    Value="{StaticResource VertexToolTipContent}" />

                                <!-- Global vertex template -->
                                <Setter
                                    Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate
                                            TargetType="{x:Type GraphSharp:VertexControl}">
                                            <Border
                                                x:Name="VertexBorder"
                                                BorderBrush="Black"
                                                Background="Black"
                                                BorderThickness="1"
                                                CornerRadius="0,0,0,0"
                                                MouseDown="StackPanel_MouseDown"
                                                Padding="5">

                                                <ContentPresenter
                                                    Content="{TemplateBinding Vertex}"
                                                    ContentTemplate="{StaticResource YodiiVertexTemplate}" />

                                                <Border.Effect>
                                                    <DropShadowEffect
                                                        BlurRadius="3"
                                                        Color="Gray"
                                                        Opacity="0.3"
                                                        Direction="300" />
                                                </Border.Effect>
                                            </Border>

                                            <!-- Conditional vertex template -->
                                            <ControlTemplate.Triggers>
                                                <!-- Service styling -->
                                                <DataTrigger
                                                    Binding="{Binding Path=IsService, Mode=OneWay}"
                                                    Value="true">
                                                    <Setter
                                                        TargetName="VertexBorder"
                                                        Property="BorderBrush"
                                                        Value="Red" />
                                                </DataTrigger>
                                                <!-- Plugin styling -->
                                                <DataTrigger
                                                    Binding="{Binding Path=IsPlugin, Mode=OneWay}"
                                                    Value="true">
                                                    <Setter
                                                        TargetName="VertexBorder"
                                                        Property="BorderBrush"
                                                        Value="Blue" />
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Setter
                                    Property="RenderTransformOrigin"
                                    Value="0.5,0.5" />

                                <Setter
                                    Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform
                                            ScaleX="1"
                                            ScaleY="1" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>

                                    <!-- Selected -->
                                    <DataTrigger
                                        Binding="{Binding Path=IsSelected, Mode=OneWay}"
                                        Value="true">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard
                                                    AutoReverse="False">
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                        To="1.3"
                                                        Duration="00:00:00.25" />
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                        To="1.3"
                                                        Duration="00:00:00.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard
                                                    AutoReverse="False">
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                        To="1"
                                                        Duration="00:00:00.25" />
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                        To="1"
                                                        Duration="00:00:00.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <!-- Global edge style -->
                            <Style
                                TargetType="{x:Type GraphSharp:EdgeControl}">
                                <Style.Resources>
                                    <ToolTip
                                        x:Key="ToolTipContent">
                                        <StackPanel>
                                            <!-- TODO -->
                                            <TextBlock
                                                Text="{Binding Description}" />
                                        </StackPanel>
                                    </ToolTip>
                                </Style.Resources>
                                <Setter
                                    Property="ToolTip"
                                    Value="{StaticResource ToolTipContent}" />
                            </Style>
                        </local:YodiiGraphLayout.Resources>
                    </local:YodiiGraphLayout>
                </Border>
            </xctk:Zoombox>

            <!-- Right panel -->
            <GridSplitter
                ResizeDirection="Columns"
                Grid.Row="0"
                Grid.Column="1"
                Grid.RowSpan="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
            <ContentControl
                Grid.Row="0"
                Grid.Column="2"
                Content="{Binding Path=SelectedVertex, UpdateSourceTrigger=PropertyChanged}"
                ContentTemplateSelector="{StaticResource ResourceKey=vertexPropertiesTemplateSelector}" />

            <!-- Bottom panel -->
            <GridSplitter
                ResizeDirection="Rows"
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
            <Border
                Padding="5"
                Background="LightGray"
                Grid.Row="2"
                Grid.Column="0">
                <StackPanel>
                    <TextBlock>Right panel</TextBlock>
                </StackPanel>
            </Border>
        </Grid>
    </DockPanel>
</Fluent:RibbonWindow>


