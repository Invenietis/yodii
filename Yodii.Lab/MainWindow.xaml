<Fluent:RibbonWindow
    x:Class="Yodii.Lab.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:GraphX="clr-namespace:GraphX;assembly=CK.GraphX"
    xmlns:gxc="clr-namespace:GraphX.Controls;assembly=CK.GraphX"
    xmlns:ei="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:Yodii.Lab"
    xmlns:mocks="clr-namespace:Yodii.Lab.Mocks"
    xmlns:ym="clr-namespace:Yodii.Model;assembly=Yodii.Model"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    WindowStartupLocation="CenterScreen"
    Icon="/Yodii.Lab;component/Assets/Icons/class_32xLG.png"
    x:Name="MainWindowRoot"
    Title="{Binding Path=WindowTitle, FallbackValue=Yodii.Lab}"
    Height="600"
    Width="800">

    <Fluent:RibbonWindow.InputBindings>
        <KeyBinding
            Key="S"
            Modifiers="Control"
            Command="{Binding Path=SaveCommand}" />
        <KeyBinding
            Key="O"
            Modifiers="Control"
            Command="{Binding Path=OpenFileCommand}" />
        <KeyBinding
            Key="N"
            Modifiers="Control"
            Command="{Binding Path=NewFileCommand}" />
        <KeyBinding
            Key="E"
            Modifiers="Control"
            Command="{Binding Path=ToggleEngineCommand}" />
        <KeyBinding
            Key="R"
            Modifiers="Control"
            Command="{Binding Path=AutoPositionCommand}" />
        <KeyBinding
            Key="F5"
            Command="{Binding Path=ReorderGraphLayoutCommand}" />
        <KeyBinding
            Key="Delete"
            Command="{Binding Path=RemoveSelectedVertexCommand}" />
        <KeyBinding
            Key="C"
            Modifiers="Alt"
            Command="{Binding Path=OpenConfigurationEditorCommand}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
        <KeyBinding
            Key="S"
            Modifiers="Alt"
            Command="{Binding Path=CreateServiceCommand}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
        <KeyBinding
            Key="P"
            Modifiers="Alt"
            Command="{Binding Path=CreatePluginCommand}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
    </Fluent:RibbonWindow.InputBindings>
    <Fluent:RibbonWindow.Resources>
        <ObjectDataProvider
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}"
            x:Key="RunningRequirements">
            <ObjectDataProvider.MethodParameters>
                <x:Type
                    TypeName="ym:DependencyRequirement" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate
            x:Key="serviceVertexPropertiesTemplate"
            DataType="local:YodiiGraphVertex">
            <local:ServicePropertyPanel
                LiveServiceInfo="{Binding Path=LabServiceInfo, Mode=OneWay}"
                ServiceInfoManager="{Binding Path=DataContext.LabState, ElementName=MainWindowRoot, Mode=OneWay}" />
        </DataTemplate>

        <DataTemplate
            x:Key="pluginVertexPropertiesTemplate"
            DataType="local:YodiiGraphVertex">
            <local:PluginPropertyPanel
                LivePluginInfo="{Binding Path=LabPluginInfo, Mode=OneWay}"
                ServiceInfos="{Binding Path=DataContext.LabState.ServiceInfos, ElementName=MainWindowRoot, Mode=OneWay}" />
        </DataTemplate>

        <local:VertexPropertiesTemplateSelector
            PluginPropertiesTemplate="{StaticResource pluginVertexPropertiesTemplate}"
            ServicePropertiesTemplate="{StaticResource serviceVertexPropertiesTemplate}"
            x:Key="vertexPropertiesTemplateSelector" />
    </Fluent:RibbonWindow.Resources>
    <DockPanel>
        <Fluent:Ribbon
            CanQuickAccessLocationChanging="False"
            ShowQuickAccessToolBarAboveRibbon="True"
            DockPanel.Dock="Top">
            <!--Quick Access Toolbar Items-->
            <Fluent:Ribbon.QuickAccessItems>
                <!--Use Content or Target Property to set QAT item-->
                <Fluent:QuickAccessMenuItem
                    IsChecked="true"
                    Target="{Binding ElementName=NewButton}" />
                <Fluent:QuickAccessMenuItem
                    IsChecked="true"
                    Target="{Binding ElementName=SaveButton}" />
                <Fluent:QuickAccessMenuItem
                    IsChecked="true"
                    Target="{Binding ElementName=OpenButton}" />
            </Fluent:Ribbon.QuickAccessItems>
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage
                    x:Name="RibbonBackstage"
                    Header="File">
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem
                            Header="New">
                            <Grid
                                Margin="15pt"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Button
                                    VerticalContentAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    Width="100pt"
                                    Height="100pt"
                                    Command="{Binding Path=NewFileCommand}">
                                    <DockPanel>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Margin="0,0,0,5pt"
                                            FontWeight="Bold"
                                            DockPanel.Dock="Bottom">New file</TextBlock>
                                        <Viewbox
                                            Stretch="UniformToFill"
                                            Child="{StaticResource NewFileIcon}" />
                                    </DockPanel>
                                </Button>
                            </Grid>
                        </Fluent:BackstageTabItem>
                        <Fluent:BackstageTabItem
                            Header="Open">
                            <Grid
                                Margin="15pt"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="Auto" />
                                    <ColumnDefinition
                                        Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Left"
                                    VerticalContentAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    Width="100pt"
                                    Height="100pt"
                                    Command="{Binding Path=OpenFileCommand}">
                                    <DockPanel>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Margin="0,0,0,5pt"
                                            FontWeight="Bold"
                                            DockPanel.Dock="Bottom">Open file</TextBlock>
                                        <Viewbox
                                            Stretch="UniformToFill"
                                            Child="{StaticResource FolderOpenIcon}" />
                                    </DockPanel>
                                </Button>
                                <ScrollViewer
                                    Grid.Column="1"
                                    VerticalScrollBarVisibility="Auto">
                                    <StackPanel
                                        Margin="20">
                                        <TextBlock
                                            FontWeight="Bold"
                                            Margin="0,0,0,5pt">Recently opened files</TextBlock>
                                        <Rectangle
                                            Fill="DarkGray"
                                            Height="1pt"
                                            Margin="0,0,0,5pt"
                                            HorizontalAlignment="Stretch" />
                                        <ItemsControl
                                            ItemsSource="{Binding Path=RecentFiles}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Border
                                                        Padding="5pt"
                                                        Margin="5pt"
                                                        BorderBrush="Black"
                                                        BorderThickness="1">
                                                        <StackPanel>
                                                            <TextBlock
                                                                Foreground="Black"
                                                                FontWeight="Bold"
                                                                FontSize="12pt"
                                                                Text="{Binding Path=FileName}" />
                                                            <TextBlock
                                                                Foreground="#FF111111"
                                                                Text="{Binding Path=Directory}" />
                                                        </StackPanel>

                                                        <Border.Style>
                                                            <Style
                                                                TargetType="Border">
                                                                <Setter
                                                                    Property="Background"
                                                                    Value="#FFDDDDDD" />

                                                                <Style.Triggers>
                                                                    <DataTrigger
                                                                        Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                        Value="true">
                                                                        <Setter
                                                                            Property="Background"
                                                                            Value="#FFEEEEEE" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <ei:Interaction.Triggers>
                                                            <ei:EventTrigger
                                                                EventName="MouseLeftButtonDown">
                                                                <ei:InvokeCommandAction
                                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.OpenFileCommand}"
                                                                    CommandParameter="{Binding Path=File.FullName}" />
                                                            </ei:EventTrigger>
                                                        </ei:Interaction.Triggers>
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Fluent:BackstageTabItem>
                        <Fluent:BackstageTabItem
                            Header="Save">
                            <Grid
                                Margin="15pt"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Button
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Width="100pt"
                                    Height="100pt"
                                    Command="{Binding Path=SaveAsFileCommand}">
                                    <DockPanel
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch">
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Margin="0,0,0,5pt"
                                            FontWeight="Bold"
                                            DockPanel.Dock="Bottom">Save as...</TextBlock>
                                        <Grid>
                                            <Grid.Background>
                                                <VisualBrush
                                                    AlignmentX="Center"
                                                    AlignmentY="Center"
                                                    Visual="{StaticResource DiskIconViewBox}"
                                                    Stretch="UniformToFill" />
                                            </Grid.Background>
                                        </Grid>

                                    </DockPanel>
                                </Button>
                            </Grid>
                        </Fluent:BackstageTabItem>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
            <!--Tabs-->
            <Fluent:RibbonTabItem
                Header="Home">
                <Fluent:RibbonGroupBox
                    Header="File">
                    <Fluent:Button
                        Size="Small"
                        x:Name="NewButton"
                        Header="New"
                        Fluent:KeyTip.Keys="N"
                        Command="{Binding Path=NewFileCommand}"
                        Icon="/Yodii.Lab;component/Assets/Icons/NewDocument_32x32.png">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="New file (Ctrl+N)"
                                Width="250"
                                Text="Create an empty Yodii.Lab document." />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button
                        Size="Small"
                        x:Name="SaveButton"
                        Header="Save"
                        Fluent:KeyTip.Keys="S"
                        Command="{Binding Path=SaveCommand}"
                        LargeIcon="{StaticResource DiskIconViewBox}"
                        Icon="/Yodii.Lab;component/Assets/Icons/base_floppydisk_32.png">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Save file (Ctrl+S)"
                                Width="250"
                                Text="Save this Yodii.Lab document into a file." />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button
                        Size="Small"
                        x:Name="OpenButton"
                        Header="Open"
                        Fluent:KeyTip.Keys="O"
                        Command="{Binding Path=OpenFileCommand}"
                        Icon="/Yodii.Lab;component/Assets/Icons/Folder.png">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Open file (Ctrl+O)"
                                Width="250"
                                Text="Open an existing Yodii.Lab document from a file." />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        Fluent:KeyTip.Keys="S"
                        Header="Add service"
                        Command="{Binding Path=CreateServiceCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <Fluent:Button.LargeIcon>
                            <Image
                                Height="12pt"
                                Source="/Yodii.Lab;component/Assets/Icons/interface_16xLG.png" />
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Create a service (Alt+S)"
                                Width="250"
                                Text="Create a new service, and add it into this Yodii.Lab document." />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button
                        Fluent:KeyTip.Keys="P"
                        Header="Add plugin"
                        Command="{Binding Path=CreatePluginCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <Fluent:Button.LargeIcon>
                            <Image
                                Height="12pt"
                                Source="/Yodii.Lab;component/Assets/Icons/class_32xLG.png" />
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Create a plugin (Alt+P)"
                                Width="250"
                                Text="Create a new plugin, and add it into this Yodii.Lab document." />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                    <Fluent:Button
                        Fluent:KeyTip.Keys="D"
                        Header="Delete selected"
                        Command="{Binding Path=RemoveSelectedVertexCommand}">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource DeleteIcon}" />
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Delete selection (Del)"
                                Width="250"
                                Text="Delete the selected service or plugin, and remove it from the graph." />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        Fluent:KeyTip.Keys="C"
                        Header="Configuration editor"
                        Command="{Binding Path=OpenConfigurationEditorCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource LayerIcon}" />
                        </Fluent:Button.LargeIcon>
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Open configuration editor (Alt+C)"
                                Width="250"
                                Text="Open the configuration editor, where you can change Yodii's configuration, and select which services and plugins must be run." />
                        </Fluent:Button.ToolTip>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        Fluent:KeyTip.Keys="R"
                        Header="Auto-position elements"
                        Command="{Binding Path=AutoPositionCommand}">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Auto-position elements (Ctrl+R)"
                                Width="250"
                                Text="Attempt to automatically position all elements. This will overwrite every item position." />
                        </Fluent:Button.ToolTip>
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource RefreshIcon}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button
                        Header="Export to PNG"
                        Click="ExportToPngButton_Click">
                        <Fluent:Button.LargeIcon>
                            <Viewbox
                                Stretch="UniformToFill"
                                Child="{StaticResource PlayIconGreen}" />
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:Button
                        Fluent:KeyTip.Keys="E"
                        Header="{Binding Path=ToggleEngineText}"
                        Command="{Binding Path=ToggleEngineCommand}">
                        <Fluent:Button.ToolTip>
                            <Fluent:ScreenTip
                                Title="Start/stop engine (Ctrl+E)"
                                Width="250"
                                Text="Start or stop Yodii's engine, causing it to start or stop configured plugins or services.
                                While the engine is running, you can start or stop any items where it wouldn't conflict with Yodii's configuration." />
                        </Fluent:Button.ToolTip>
                        <Fluent:Button.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding Path=LabState.Engine.IsRunning}"
                                        Value="true">
                                        <Setter
                                            Property="Fluent:Button.LargeIcon">
                                            <Setter.Value>
                                                <Viewbox
                                                    Stretch="UniformToFill"
                                                    Child="{StaticResource PowerIconRed}" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding Path=LabState.Engine.IsRunning}"
                                        Value="false">
                                        <Setter
                                            Property="Fluent:Button.LargeIcon">
                                            <Setter.Value>
                                                <Viewbox
                                                    Stretch="UniformToFill"
                                                    Child="{StaticResource PowerIcon}" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Fluent:Button.Style>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <!-- Central panel -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="*" />
                <RowDefinition>
                    <RowDefinition.Style>
                        <Style TargetType="RowDefinition">
                            <Setter
                                Property="Height"
                                Value="3pt" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding Path=LabState.Engine.IsRunning}"
                                    Value="false">
                                    <Setter
                                        Property="Height"
                                        Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
                <RowDefinition>
                    <RowDefinition.Style>
                        <Style
                            TargetType="RowDefinition">
                            <Setter
                                Property="Height"
                                Value="*" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding Path=LabState.Engine.IsRunning}"
                                    Value="false">
                                    <Setter
                                        Property="Height"
                                        Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="3pt" />
                <ColumnDefinition
                    Width="200pt"
                    MinWidth="200pt" />
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <DataTemplate
                    x:Key="YodiiVertexTemplate"
                    DataType="{x:Type local:YodiiGraphVertex}">

                    <local:YodiiVertexControl
                        Vertex="{Binding Mode=OneWay}"
                        ConfigurationManager="{Binding ElementName=MainWindowRoot, Path=DataContext.ConfigurationManager}" />

                </DataTemplate>
                <Style
                    TargetType="{x:Type GraphX:VertexControl}">
                    <Style.Resources>
                        <ToolTip
                            x:Key="VertexToolTipContent">
                            <StackPanel>
                                <TextBlock
                                    Text="{Binding Title}" />
                            </StackPanel>
                        </ToolTip>
                    </Style.Resources>
                    <Setter
                        Property="ToolTip"
                        Value="{StaticResource VertexToolTipContent}" />
                    <Setter
                        Property="Template">
                        <Setter.Value>
                            <ControlTemplate
                                TargetType="{x:Type GraphX:VertexControl}">

                                <ContentPresenter
                                    Content="{TemplateBinding Vertex}"
                                    ContentTemplate="{StaticResource YodiiVertexTemplate}"
                                    MouseDown="StackPanel_MouseDown" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter
                        Property="RenderTransformOrigin"
                        Value="0.5,0.5" />

                    <Setter
                        Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform
                                ScaleX="1"
                                ScaleY="1" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding Path=IsSelected, Mode=OneWay}"
                            Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard
                                        AutoReverse="False">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.1"
                                            Duration="00:00:00.25" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.1"
                                            Duration="00:00:00.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard
                                        AutoReverse="False">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="00:00:00.25" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="00:00:00.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style
                    TargetType="{x:Type GraphX:EdgeControl}">
                    <Style.Resources>
                        <ToolTip
                            x:Key="ToolTipContent">
                            <StackPanel>
                                <TextBlock
                                    Text="{Binding Description}" />
                            </StackPanel>
                        </ToolTip>
                    </Style.Resources>

                    <Style.Triggers>
                        <!-- Specialization -->
                        <DataTrigger
                            Binding="{Binding Path=IsSpecialization}"
                            Value="true">
                            <Setter
                                Property="Foreground"
                                Value="Red" />
                            <Setter
                                Property="StrokeThickness"
                                Value="5" />
                        </DataTrigger>
                        <!-- Implementation -->
                        <DataTrigger
                            Binding="{Binding Path=IsImplementation}"
                            Value="true">
                            <Setter
                                Property="Foreground"
                                Value="Blue" />
                            <Setter
                                Property="StrokeThickness"
                                Value="3" />
                        </DataTrigger>
                        <!-- Ref. Optional -->
                        <DataTrigger
                            Binding="{Binding Path=ReferenceRequirement}"
                            Value="Optional">
                            <Setter
                                Property="Foreground"
                                Value="MidnightBlue" />
                            <Setter
                                Property="StrokeThickness"
                                Value="2" />
                            <Setter
                                Property="DashStyle"
                                Value="Dot" />
                        </DataTrigger>
                        <!-- Ref. OptionalTryStart -->
                        <DataTrigger
                            Binding="{Binding Path=ReferenceRequirement}"
                            Value="OptionalTryStart">
                            <Setter
                                Property="Foreground"
                                Value="MidnightBlue" />
                            <Setter
                                Property="StrokeThickness"
                                Value="2" />
                            <Setter
                                Property="DashStyle"
                                Value="Dash" />
                        </DataTrigger>
                        <!-- Ref. Runnable -->
                        <DataTrigger
                            Binding="{Binding Path=ReferenceRequirement}"
                            Value="Runnable">
                            <Setter
                                Property="Foreground"
                                Value="Yellow" />
                            <Setter
                                Property="StrokeThickness"
                                Value="2" />
                            <Setter
                                Property="DashStyle"
                                Value="Dot" />
                        </DataTrigger>
                        <!-- Ref. RunnableTryStart -->
                        <DataTrigger
                            Binding="{Binding Path=ReferenceRequirement}"
                            Value="RunnableTryStart">
                            <Setter
                                Property="Foreground"
                                Value="Yellow" />
                            <Setter
                                Property="StrokeThickness"
                                Value="2" />
                            <Setter
                                Property="DashStyle"
                                Value="Dash" />
                        </DataTrigger>
                        <!-- Ref. Running -->
                        <DataTrigger
                            Binding="{Binding Path=ReferenceRequirement}"
                            Value="Running">
                            <Setter
                                Property="Foreground"
                                Value="#00FF00" />
                            <Setter
                                Property="StrokeThickness"
                                Value="2" />
                            <Setter
                                Property="DashStyle"
                                Value="Dash" />
                        </DataTrigger>
                    </Style.Triggers>

                    <Setter
                        Property="ToolTip"
                        Value="{StaticResource ToolTipContent}" />

                    <Setter
                        Property="Template">
                        <Setter.Value>
                            <ControlTemplate
                                TargetType="{x:Type GraphX:EdgeControl}">
                                <Grid>
                                    <Path
                                        Stroke="{TemplateBinding Foreground}"
                                        StrokeThickness="2"
                                        MinWidth="1"
                                        MinHeight="1"
                                        ToolTip="{TemplateBinding ToolTip}"
                                        x:Name="PART_edgePath" />
                                    <Path
                                        Stroke="{TemplateBinding Foreground}"
                                        StrokeThickness="2"
                                        MinWidth="1"
                                        MinHeight="1"
                                        x:Name="PART_edgeArrowPath" />
                                    <GraphX:EdgeLabelControl
                                        x:Name="PART_edgeLabel"
                                        Foreground="White"
                                        Content="{Binding Path=Edge.ReferenceRequirement, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>
                <Style
                    TargetType="{x:Type GraphX:EdgeLabelControl}">
                    <Setter
                        Property="Template">
                        <Setter.Value>
                            <ControlTemplate
                                TargetType="{x:Type GraphX:EdgeLabelControl}">
                                <Grid
                                    Visibility="{Binding Path=IsServiceReference, Converter={StaticResource boolToVisibilityConverter}}">
                                    <Border
                                        BorderBrush="White"
                                        BorderThickness="1"
                                        Background="Black"
                                        CornerRadius="5">
                                        <ContentPresenter
                                            Margin="3" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <!-- Notification holder -->
            <local:NotificationsContainerUserControl
                x:Name="NotificationControl"
                Panel.ZIndex="10"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Grid.Column="0"
                Grid.Row="0"
                Grid.RowSpan="3" />

            <!-- Graph viewer -->
            <gxc:ZoomControl
                x:Name="ZoomBox"
                MouseDown="graphLayout_MouseDown"
                Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                Grid.Column="0"
                Grid.Row="0"
                Grid.RowSpan="3">
                <local:YodiiGraphArea x:Name="GraphArea" />
            </gxc:ZoomControl>

            <!-- Right panel -->
            <!-- Vertical splitter -->
            <GridSplitter
                ResizeDirection="Columns"
                Grid.Row="0"
                Grid.Column="1"
                Grid.RowSpan="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
            <!-- Horizontal splitter -->
            <GridSplitter
                ResizeDirection="Rows"
                Grid.Row="1"
                Grid.Column="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
            <!-- Vertex properties -->
            <ContentControl
                Grid.Row="0"
                Grid.Column="2"
                Content="{Binding Path=SelectedVertex, UpdateSourceTrigger=PropertyChanged}"
                ContentTemplateSelector="{StaticResource ResourceKey=vertexPropertiesTemplateSelector}" />
            <!-- Yodii commands properties -->
            <Border
                Padding="5pt"
                Grid.Row="2"
                Grid.Column="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <DockPanel
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <TextBlock
                        DockPanel.Dock="Top"
                        FontWeight="Bold"
                        Margin="0,3pt">Yodii dynamic commands</TextBlock>
                    <DockPanel
                        Height="Auto"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Visibility="{Binding LabState.Engine.IsRunning, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}">
                        <DockPanel
                            DockPanel.Dock="Top">
                            <Button
                                DockPanel.Dock="Right"
                                Command="{Binding Path=RevokeAllCommandsCommand}">Revoke all</Button>
                            <TextBlock
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                TextTrimming="CharacterEllipsis">
                                <Run
                                    Text="{Binding LabState.Engine.LiveInfo.YodiiCommands.Count, Mode=OneWay}" /> commands.
                            </TextBlock>
                        </DockPanel>
                        <ScrollViewer
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsControl
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                ItemsSource="{Binding LabState.Engine.LiveInfo.YodiiCommands, Mode=OneWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate
                                        DataType="ym:YodiiCommand">
                                        <Border
                                            BorderBrush="Black"
                                            BorderThickness="1pt"
                                            CornerRadius="3"
                                            Padding="3pt">
                                            <DockPanel>
                                                <Image
                                                    DockPanel.Dock="Left"
                                                    MaxHeight="12pt"
                                                    MaxWidth="12pt"
                                                    VerticalAlignment="Center"
                                                    Margin="0,0,3pt,0">
                                                    <Image.Style>
                                                        <Style
                                                            TargetType="Image">
                                                            <Style.Triggers>
                                                                <DataTrigger
                                                                    Binding="{Binding Path=Start, Mode=OneWay}"
                                                                    Value="true">
                                                                    <Setter
                                                                        Property="Source"
                                                                        Value="/Yodii.Lab;component/Assets/Icons/RunningStatusRunning.png" />
                                                                </DataTrigger>
                                                                <DataTrigger
                                                                    Binding="{Binding Path=Start, Mode=OneWay}"
                                                                    Value="false">
                                                                    <Setter
                                                                        Property="Source"
                                                                        Value="/Yodii.Lab;component/Assets/Icons/RunningStatusStopped.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                                <TextBlock
                                                    DockPanel.Dock="Right"
                                                    Margin="3pt,0"
                                                    Text="{Binding Path=CallerKey}" />
                                                <TextBlock
                                                    DockPanel.Dock="Right"
                                                    Margin="3pt,0"
                                                    Foreground="Purple"
                                                    Text="{Binding Path=Impact}" />

                                                <TextBlock
                                                    FontWeight="Bold"
                                                    TextWrapping="NoWrap"
                                                    TextTrimming="CharacterEllipsis">
                                                    <TextBlock.Style>
                                                        <Style
                                                            TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger
                                                                    Binding="{Binding Path=PluginFullName, Converter={StaticResource NullToBoolValueConverter}, Mode=OneWay}"
                                                                    Value="false">
                                                                    <Setter
                                                                        Property="Text">
                                                                        <Setter.Value>
                                                                            <Binding
                                                                                Path="PluginFullName"
                                                                                Mode="OneWay" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter
                                                                        Property="Foreground"
                                                                        Value="Blue" />
                                                                </DataTrigger>
                                                                <DataTrigger
                                                                    Binding="{Binding Path=ServiceFullName, Converter={StaticResource NullToBoolValueConverter}, Mode=OneWay}"
                                                                    Value="false">
                                                                    <Setter
                                                                        Property="Text">
                                                                        <Setter.Value>
                                                                            <Binding
                                                                                Path="ServiceFullName"
                                                                                Mode="OneWay" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter
                                                                        Property="Foreground"
                                                                        Value="Red" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DockPanel>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>

                            </ItemsControl>
                        </ScrollViewer>
                    </DockPanel>
                </DockPanel>
            </Border>
            <!-- Bottom panel -->
            <!--<GridSplitter
                ResizeDirection="Rows"
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />-->
            <!--<Border
                Padding="5"
                Background="LightGray"
                Grid.Row="2"
                Grid.Column="0">
                <StackPanel>
                    <TextBlock>Right panel</TextBlock>
                </StackPanel>
            </Border>-->
        </Grid>
    </DockPanel>
</Fluent:RibbonWindow>


